%ebtel_tstep.m

%Will Barnes
%27 May 2014

clear all
close all

%Call EBTEL function using varying timesteps. This will be compared against
%the IDL code which will continue to use a timestep of only one second.

%Set the case number
Case = 1;

%Create the timestep vector
tau = 1:.1:10;

%Create the matrices to store max parameters and times
T_max = zeros(1,length(tau));
T_max_idl = zeros(1,length(tau));
P_max = zeros(1,length(tau));
P_max_idl = zeros(1,length(tau));
n_max = zeros(1,length(tau));
n_max_idl = zeros(1,length(tau));
t_Tmax = zeros(1,length(tau));
t_Tmax_idl = zeros(1,length(tau));
t_Pmax = zeros(1,length(tau));
t_Pmax_idl = zeros(1,length(tau));
t_nmax = zeros(1,length(tau));
t_nmax_idl = zeros(1,length(tau));

%Call the ebtel_plot function for all timesteps
for i = 1:length(tau)
    [T_max(i),n_max(i),P_max(i),T_max_idl(i),n_max_idl(i),P_max_idl(i),t_Tmax(i),t_nmax(i),t_Pmax(i),...
        t_Tmax_idl(i),t_nmax_idl(i),t_Pmax_idl(i)] = plot_ebtel(tau(i),Case);
end

%Calculate the six differences
d_T = abs(T_max - T_max_idl);
d_P = abs(P_max - P_max_idl);
d_n = abs(n_max - n_max_idl);
d_tT = abs(t_Tmax - t_Tmax_idl);
d_tP = abs(t_Pmax - t_Pmax_idl);
d_tn = abs(t_nmax - t_nmax_idl);

%Plot the differences versus timestep
figure
hold on
plot(tau,d_T/10^6)
plot(tau,d_P,'r')
plot(tau,d_n/10^8,'k')
hold off
figure
hold on
plot(tau,d_tT)
plot(tau,d_tP,'r')
plot(tau,d_tn,'k')
hold off